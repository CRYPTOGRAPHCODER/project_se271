#ifndef __GAME_H__
#define __GAME_H__

#include <iostream>
#include <cstdio>

#include "windows.h"
#include "player.h"

constexpr int SUBJECT_BUFFER = 100;         // Max number of subjects
constexpr int DATA_LENGTH = 100;
constexpr int BUTTON_LENGTH = 9;            // Amount of the Button

// Struct subject - holds subject's data
struct subject{
public:
  int title;
  int level;
  int timetable[3] = {0,0,0};
  int credit;
  int workload[4] = {0,0,0,0};
  int attend_limit;
  int attend_hope;
  int attend_people;
  int category;
  int area;
};

struct data
{
    std::string bt_basic[9] = {"다음","","","","","","","",""};

    std::string co_init = "-";
    std::string bt_init[9] = {"다음","","","","","","","",""};

    std::string co_intro01 = "게임을 시작합니다.";
    std::string co_intro02 = "합격을 축하드립니다! 당신은 길고 긴 수험 생활을 끝내고 대학교에 진학하였습니다.\n기본적인 조작 방법에 대해서 설명하겠습니다.\n본 게임에서 모든 유효한 조작은 아래 9개의 버튼을 눌러서 사용합니다.";
    std::string co_intro03 = "왼쪽의 정보창은 현재의 스탯을 표시합니다.\n\n가장 위부터 시간, 이름, 체력, 각종 스탯, 아이템, 그리고 돈과 점수, 마지막으로 이수한 학점을 표시하는 막대가 있습니다.\n아래는 메모장으로 자유롭게 내용을 작성해도 무방합니다.";
    std::string co_intro04 = "한 학기는 총 10일로 이루어져 있습니다. 하루는 총 아침, 점심, 저녁, 밤 네 개의 시간대로 분류되며, 8일째 아침부터는 수강신청을 할 수 있습니다.\n단, 수강 가능 과목의 목록은 언제든 확인이 가능하며, 턴을 소모하지 않습니다. 상점 또한 턴을 소모하지 않습니다.";
    std::string co_intro05 = "게임을 클리어하기 위해서는 필수과목과 선택과목에 해당하는 학점을 모두 채우면서 한 학기를 체력이 0 이상 남긴 채 종료하면 됩니다.\n게임 중 언제라도 체력이 0 이하로 내려간다면 게임 오버가 됩니다. 마지막 학기에 마지막 과목을 들은 뒤에도 체력이 0이 된다면, 게임 오버입니다.\n\n필수 과목의 목록은 따로 존재하지 않지만, 다른 과목보다 수강할 때 필요한 에너지가 더 많이 들어갑니다.\n\n그렇다면, 게임을 시작하겠습니다. 4년 (이상)의 기간동안 무사히 살아남아 졸업까지 해 보세요!\n\n 팁 : 실제 과목 명과 예측되는 요구 스탯에는 큰 관련이 없을 수도 있습니다.";

    std::string co_main = "어디로 갈까요?";
    std::string bt_main[9] = {"밖으로 나가기","수강신청","상점으로 가기","방에서 휴식","공부하기","운동하기","","",""};

    std::string co_outside = "밖으로 나왔습니다. 어디로 갈까요?";
    std::string bt_outside[9] = {"친구를 만나기","동아리방 가기","교수님 만나기","주변을 정처없이 돌아다니기","일하러 가기","","","","집으로 돌아가기"};
    std::string co_sugang = "수강신청 페이지에 들어왔습니다.";
    std::string bt_sugang[9] = {"로그인(8일 이후부터 로그인 가능)","과목 정보 보기","수강신청한 과목 보기","","","","","","컴퓨터 끄기"};

    std::string co_store = "상점에 도착했습니다.";
    std::string bt_store[9] = {"물건 사기","물건 팔기","","","","","","","돌아가기"};
    std::string co_store_buy = "사고 싶은 물건의 버튼을 눌러 주세요. 아이템은 8개까지만 소유 가능합니다.";
    std::string bt_store_buy[9] = {"","","","","","","","다음","돌아가기"};
    std::string co_store_sell = "팔고 싶은 물건의 버튼을 눌러 주세요.\n 원래 가격의 20% 가격으로 팔 수 있습니다.";
    std::string bt_store_sell[9] = {"","","","","","","","","돌아가기"};

    std::string co_meet_friend[15] = {"다음 학기에 배울 과목에 대한 이야기를 하는 것은 좋았으나, 방학 중에 의욕이 있어봐야 얼마나 있겠습니까. 건설적인 대화를 조금하긴 했지만 밤새 놀았습니다.\n신나게 놀고보니 지갑이 얇아져있습니다.",
                                     "선배를 만나서 팁을 달라고 부탁했습니다. 기숙사 밖에 사는 선배를 찾아가느라 춥고 귀찮았지만, 나름 소득이 있었습니다.\n찬바람을 쐬었습니다.",
                                     "친구의 고민을 들어주면서 한잔 걸쳤습니다. 고민하는 친구를 위해서 오늘은 내가 쏜다!\n친구의 근심과 내 지갑 속 돈이 같이 사라졌습니다.",
                                     "무한리필집에서 밥 먹으면서 대화를 나눴습니다. 역시 이 주변에선 무한리필집이 가장 경제적인거 같습니다.\n소지금이 조금 감소했습니다.",
                                     "맛있는거라도 먹으면서 힘내라고 외식을 했습니다. 한턱 내려했으나 친구가 더치페이를 하자고 강하게 주장합니다.\n소지금이 감소했습니다.",
                                     "편의점 맥주에 치킨을 먹으며 친구의 고민을 들어줬습니다. 가성비가 끝내주네요.\n소지금이 매우 조금 감소했습니다.",
                                     "하라는 정보교환은 안하고 피시방에 갔습니다.\n즐겁게 놀고 저녁을 먹기 위해 기숙사에 왔습니다.\n소지금이 조금 감소하고 체력이 회복됬습니다.",
                                     "하라는 정보교환은 안하고 피시방에 갔습니다.\n오랜만에 피시방 왔는데 달리고 가야죠?\n소지금이 감소하고 체력이 소폭 감소했습니다.",
                                     "하라는 정보교환은 안하고 피시방에 갔습니다.\n방학! 달린다! 밤샘!\n 소지금이 조금 많이 감소하고 체력이 감소했습니다.",
                                     "수강신청 관련으로 대화하진 못 했지만 신나게 운동을 했습니다.\n 현재 체력이 소폭 감소합니다, 체력스탯, 회복스탯이 증가했습니다.",
                                     "친구가 교수님을 뵙고 온 뒤 이야기를 해줍니다.\n교수님이 열정에 넘치신다네요.\n해당 과목의 부담이 증가합니다",
                                     "친구가 교수님을 뵙고 온 뒤 이야기를 해줍니다.\n교수님이 이젠 좀 쉽게 해야지 학생들이 너무 불쌍하다고 하셨다네요\n해동 과목의 부담이 감소합니다.",
                                     "친구를 만난 건 좋았지만 생각없이 노래방에 가서 시간만 때웠습니다.\n지갑이 얇아졌지만, 스트레스가 조금 풀렸습니다.",
                                     "친구를 만나려 했으나 모두가 일정이 있어서 아무도 만나지 못 했습니다.\n그럴수도 있지",
                                     "친구를 만나려 했으나 모두가 일정이 있어서 아무도 만나지 못 했습니다.\n얼마나 아싸면 친구가 모두 일정이 있어서 아무도 못 만나는 경우가 생기나하는 생각에 감정이 블루해집니다.\n최대 체력이 감소합니다."};

    std::string co_visit_professor[12] = {"방학 중에 귀찮음을 이기고 나왔으나 교수님이 안 계십니다. 추위가 뼛속에 스며듭니다.\n체력이 감소합니다.",
                                         "교수님의 말씀하시길 난이도는 학생이 어떻게 하는가에 달린 것 같다고 하시네요. 하지만 굉장히 재미있는 수업이 될 것이라 하십니다.",
                                         "교수님의 열정이 굉장합니다. 교수님의 기세를 멈출 수 없습니다. FUS RO DAH!\n과목의 난이도가 증가합니다. 어려운 수업이 될 듯 합니다.",
                                         "Objection! 수업이 어려운지 묻는 질문에 교수님이 강하게 부정하십니다. 꿀과목이 될 것 같습니다.\n과목의 난이도가 감소합니다. 쉬운 수업이 될 듯합니다.",
                                         "교수님과 대화하면서 과목의 난이도는 잘 알아내지 못했지만 어떻게 공부해야될지 힌트를 얻었습니다.\n 과목의 스탯이 증가합니다.",
                                         "교수님을 뵙긴 했지만 새로운 사실을 알아내진 못 했습니다.",
                                         "과목에 대해 질문을 하러 갔지만, 진로 상담으로 빠졌습니다. 그래도 유익한 시간이었습니다.\n심신이 안정되어 체력이 회복되고 최대 체력이 증가했습니다.",
                                         "대화 중간에 멘토멘티 교수님이 조모임 이야기를 꺼내셨습니다. 개학 전에 회식을 할 듯 합니다.\n행복감에 휩싸여 체력이 대량 회복됩니다.",
                                         "교수님이 수업에 도움이 될만한 서적을 빌려주셨습니다. 다음 학기 중에 충분히 보고 돌려달라고 하십니다.\n과목 스탯이 증가합니다.",
                                         "과목에 대한 불안을 말씀드리고 격려받았습니다. 자신감과 열정이 조금 생겼습니다.\n과목의 스탯이 소폭 증가합니다.",
                                         "어떤 과목인지 들으면 들을수록 점점 불안해졌습니다. 자신감이 감소했습니다.\n과목의 스탯이 소폭 감소했습니다.",
                                         "교수님을 뵙고 왔으나 꿈이었습니다. 피곤함과 귀찮음이 몰려오며 교수님을 진짜로 뵈러 가야한다는 것이 영 귀찮습니다.\n귀찮음에 찌들어 체력과 최대 체력이 감소합니다."};

    std::string co_wander_around[24] = {"당신이 정신 차릴 때에는 이미 시간이 많이 흐른 뒤였습니다. 바보가 된 느낌을 받습니다.",
                                        "당신은 갑자기 뛰고 싶어졌습니다. 천천히, 그리고 꾸준하게 달립니다.",
                                        "당신은 갑자기 뛰고 싶어졌습니다. 전력질주를 한 당신은 모든 사람이 지켜보는 것을 보고 여기가 학교 건물 내라는 것을 알게되었습니다.\n당신은 온 힘을 다해 그 곳에서 도망칩니다.\n앗 그런데 이건 뭘까요.",
                                        "모르는 사람과 부딪힙니다. 아무도 신경쓰지 않고 서로를 지나칩니다. 아무 일도 일어나지 않습니다.",
                                        "모르는 사람과 부딪힙니다. 그 사람이 사과하고, 당신은 보상을 요구합니다.",
                                        "모르는 사람과 부딪힙니다. 그 사람이 화가 나 당신에게 싸움을 걸었고, 당신은 싸움에서 집니다.",
                                        "도서관에 갔습니다. 감동적 실화에 관한 책을 보고 당신은 눈물을 흘립니다. 문학 스탯이 증가합니다.",
                                        "도서관에 갔습니다. 다양한 전공 서적을 읽고 당신은 지식이 늘은 것에 감탄합니다.",
                                        "도서관에 갔습니다. 당신은 책을 읽으려고 했지만 집중이 되지 않습니다. 시간을 낭비했지만 당신은 보람을 느낍니다.",
                                        "친구가 두 개의 선물 중 하나를 고르라고 합니다. 당신은 작은 것을 고릅니다. 귀중한 아이템을 얻었습니다.",
                                        "친구가 두 개의 선물 중 하나를 고르라고 합니다. 당신은 큰 것을 고릅니다. 거기에는 아무것도 들어있지 않았고, 당신은 허무함을 느낍니다.",
                                        "당신과 매우 비슷하게, 아니 똑같이 생긴 사람을 만납니다. 서로 자신이 진짜라고 우깁니다. 서로 싸우다가 결국 못 본 것으로 하기로 합니다.",
                                        "당신과 매우 비슷하게, 아니 똑같이 생긴 사람을 만납니다. 서로 마음이 맞아 협력하려고 합니다. 같은 사람 두 명은 무적이 됩니다.",
                                        "어떤 사람이 당신을 지나친 후 뜁니다. 수상하게 생각한 당신은 돈이 없어진 것을 깨달았지만, 이미 늦은 뒤였습니다.",
                                        "어떤 사람이 당신을 지나친 후 뜁니다. 수상하게 생각한 당신은 아이템이 하나 없어진 것을 깨달았지만, 이미 늦은 뒤였습니다.",
                                        "배가 고픈 당신은 휴게실에서 요리를 합니다. 요리를 먹은 당신은 건강해진 느낌을 받습니다.",
                                        "배가 고픈 당신은 휴게실에서 요리를 합니다. 요리를 먹은 당신은 속이 이상하다는 것을 느낍니다.",
                                        "친구가 모르는 것을 당신에게 물어봅니다. 당신은 명확하게 그것을 설명해줍니다.",
                                        "친구가 모르는 것을 당신에게 물어봅니다. 당신은 잘 알지 못해 열심히 내용을 찾아봤지만, 진전이 없었습니다.",
                                        "친구의 실험을 도와줍니다. /당신은 열심히 했지만, 실수를 해 피해를 주고 말았습니다. 자신감이 떨어집니다.",
                                        "정처없이 이곳저곳을 돌아다닙니다. 아무것도 하지 않았지만 시간은 흘렀습니다.",
                                        "특강이 있는 것을 안 당신은 특강을 들으러 갑니다. 특강 후 특별 추첨에서 당신이 당첨되었습니다!",
                                        "특강이 있는 것을 안 당신은 특강을 들으러 갑니다. 특강은 좋았지만, 졸린 당신에게는 그렇지 않았습니다.",
                                        "어떤 두 사람이 책에 대해서 토론을 합니다. 당신도 참여했지만, 곧 의미없음을 알게되고 쓸데 없는 정보들만 늘었음을 깨닫습니다."};
    std::string bt_wander_around[9] = {"다음","","","","","","","",""};

    std::string co_work[11] = {"당신은 열심히 일했습니다.",
                               "당신은 열심히 일했습니다. 당신은 맡은 바 일을 열심히 했습니다. 정확히는 그런 줄 알았습니다. 다 하고 나서 보고를 하니 이 일이 아니었다고 합니다. 돈은 받지 못했습니다.",
                               "당신은 열심히 일을 했습니다. 그런데 사장이 돈을 주지 않습니다. 연락을 시도했지만, 헛수고입니다.",
                               "당신은 열심히 일을 했습니다. 그런데 사장이 돈을 주지 않습니다. 일자리로 갔을 때, 당신은 사장의 금고가 열려있는 것을 발견합니다. 당신은 복수를 한 것 뿐입니다.",
                               "당신이 맡은 일은 학생을 가르치는 것이었습니다. 비록 고등학교 수준이지만, 지식을 얻은 기분입니다.",
                               "이번 일은 2명이서 하는 것입니다. 당신의 파트너가 엄청난 열정을 가지고 일을 합니다. 아무것도 하지 못한 채 일이 끝났고, 별다른 노력 없이 돈을 벌었습니다.",
                               "편의점에서 알바를 합니다. 당신은 열심히 일을 했지만, 그만큼 많이 먹었습니다. 일이 끝난 후 당신이 얻은 것은 아니라 돈이 아니라 몸무게일 것입니다.",
                               "아르바이트 자리를 알아봅니다. 그런데 주위에서 사람을 구하지 않습니다. 그렇게 시간이 지나갑니다.",
                               "아르바이트 자리가 주위에 넘칩니다. \n 당신은 무얼할지 고민합니다.\n고심 끝에 결정했지만, 이미 다른 사람이 그 자리를 차지하고 난 다음이었습니다.",
                               "너무 많은 일을 잡았습니다. 지금 이 일을 끝내면 바로 다른 곳으로 가야 합니다. 당신의 체력은 바닥났지만, 적어도 지갑은 두둑합니다.",
                               "당신에게 좋은 생각이 났습니다. 자기 자신을 고용하는 것입니다. 당신은 쉬기로 결정합니다. 어차피 사장은 당신이니까요."};



    // Sugang
    std::string co_s_watch = "이번 학기의 수강 가능한 과목 목록입니다.";
    std::string bt_s_watch[9] = {"","","","","","","","","돌아가기"};

    std::string co_s_my = "현재 수강 신청이 된 과목입니다.";
    std::string bt_s_my[9] = {"","","","","","","","","돌아가기"};

    std::string co_s_apply[2] = {"수강하고 싶은 과목에 해당하는 버튼을 눌러 주세요.\n\n새로운 과목을 확인하거나, 수강신청을 시도하면 남은 시간이 감소합니다.\n남은 시간 : ","\n\n현재까지 수강한 과목 목록"};
    std::string bt_s_apply[9] = {"","","","","","","","다음","수강신청 끝내기"};

    std::string co_logout = {"시간 제한이 종료되었습니다."};
    std::string bt_logout[9] = {"","","","","","","","","수강신청 끝내기"};

    std::string sb_day[5] = {"월","화","수","목","금"};
    std::string sb_time[4] = {"아침","점심","오후","저녁"};
    std::string sb_category[2] = {"교선필수","교선선택"};

    std::string co_sugang_fail = "\n\n수강 신청에 실패했습니다.";
    std::string co_sugang_success = "\n\n수강 신청에 성공했습니다.";
    std::string co_sugang_cancel = "\n\n수강 과목을 수강 취소했습니다.";

    std::string co_club_room[37] = {
       "동아리 방에 가서 유익한 대화를 하려 했으나 마작만 잔뜩 치고 왔습니다.\n", // free set of mahjong, co_club_room[0]
         "밤샘마작을 즐겁게 쳤습니다. 아사다! 테츠야!\n밤샘마작 부작용으로 체력이 대폭 감소합니다.",
         "마작을 잔뜩 쳤지만 기적적으로 자정이 되기 전에 방에 왔습니다. 덤으로 치킨도 잔뜩 먹어서 행복감이 넘쳐흐릅니다.\n소지금이 소폭 감소합니다. 체력이 회복됩니다.",
         "마작을 즐겁게 하고 돌아오는 길에, 선배가 무언가 하나 건네줍니다.",
         "마작을 하면서 선배랑 이야기하던 도중, 다음 학기 과목에 대한 정보를 얻었습니다.",
         "친구가 역만을 쐇습니다. 오늘 저녁은 공짜 치킨이다!\n치킨을 먹어 체력이 회복됩니다.",
         "역만으로 났습니다. 너무 기분이 좋은데 치킨을 쏴야 합니다.\n역만의 기쁨과 치킨으로 인해 체력이 대폭 회복됩니다. 소지금이 대폭 감소합니다.",
         "","","",
       "작업장에서 3D 프린터를 만지면서 공부를 했습니다.\n", //free set of tech, co_club_room[7]
         "작업을 열심히 하고 있으니, 동아리 선배가 수고한다면서 맛있는 것을 사 주십니다.",
         "작업을 하던 도중, 부품을 잘 끼워맞추니 남는 부품이 생겼습니다. 이걸로 뭔가 만들어 볼 수 있을 거 같습니다.",
         "작업을 하면서 친구와 같이 이야기하던 도중, 다음 학기의 과목에 대한 정보를 들을 수 있었습니다.",
         "작업하면서 공학 공부를 하였습니다.\n공학 스텟이 소폭 상승합니다.",
         "밤새면서 작업했더니 굉장히 피곤합니다. 하지만 많은 공부가 되었습니다.\n 공학 스텟이 대폭 증가합니다. 체력이 감소됩니다.",
         "아슬아슬한 선까지 작업하다 왔더니 조금 피곤하지만 비교적 버틸만합니다.\n 공학 스텟이 증가합니다. 체력이 소폭 감소됩니다.",
         "","","",
       "동아리 방에서 책이나 읽으며 소일했습니다.\n", //free set of literature and history, co_club_room[11]
         "동아리방에서 책을 읽으면서, 뭔가 출출하기도 해서 사먹으러 나왔습니다.",
         "동아리방 한켠에서 네크로노미콘을 발견했습니다. 이건 뭐하는 걸까요...",
         "동아리방 한 켠에 있는 수업 계획서를 발견했습니다. 이것은 귀한 것이군요.",
         "책은 마음의 양식입니다. 마음이 평온해집니다.\n체력이 소폭 감소됩니다. 문학 스텟이 소폭 증가합니다.",
         "책은 마음의 양식입니다. 과식은 몸에 안 좋습니다.\n 체력이 감소됩니다. 문학 스텟이 증가합니다.",
         "마공서를 읽고 주화입마에 빠졌습니다. 공부는 안하고 소설만 읽고 지냅니다.\n 체력이 감소됩니다. 모든 스텟이 소폭 감소합니다.",
         "사회과학 과목 숙제를 하면서 공부했습니다. 영...어렵다.\n체력이 소폭 감소됩니다. 사회 스텟이 소폭 증가합니다.",
         "역사 과제 때문에 밤을 새며 책을 읽었습니다. 죽을 듯 합니다.\n체력이 감소됩니다. 사회 스텟이 증가합니다.",
         "",
       "동아리 방에서 친구들과 수학과제를 했습니다.\n", //free set of meth, co_club_room[17]
         "동아리방에서 오는 길에, 주인 없는 물건을 발견했습니다.",
         "동아리방에서 과제를 하다가, 동아리방을 청소했습니다. 근데 이게 왜 여기서 나올까요?",
         "친구들과 과제를 하면서 자연스럽게 수업에 대한 이야기가 들립니다.",
         "귀찮아서 대충 풀어서 제출했습니다. 급하게 풀다보니 머리 속에 들어오는 것도 별로 없네요.\n수학 스텟이 소폭 증가합니다.",
         "복습은 하지 않았지만 과제를 하다보니 얼추 감이 잡히는 것 같습니다. 아직 시간적 여유도 있네요.\n체력이 소폭 감소됩니다. 수학 스텟이 증가합니다.",
         "아직 제출일이 많이 남았지만 미리 과제를 했습니다. 복습까지 하면서 과제를 하니 체력적으로 힘들지만 공부는 많이 됬네요.\n체력이 감소됩니다. 수학 스텟이 대폭 증가합니다.",
                                         };

    std::string co_rest[13] = {"집에서 휴식합니다. 체력을 회복합니다.",
                               "집에 도착했습니다. 도저히 쉴 생각을 하지 않습니다. 공부를 합니다. 당신이 지칠 때까지 말이죠.",
                               "비디오 게임을 하기로 결정합니다. 최근에 나온 게임을 시작합니다. 게임에 너무 몰입한 나머지 아까 어떤 것을 공부했는지 까먹습니다. 그러나 당신은 신경쓰지 않습니다.",
                               "비디오 게임을 하기로 결정합니다. 교육용 게임을 플레이 합니다. 재밌지는 않지만, 적어도 뇌를 쉬게하는 데에는 충분합니다. 정말 공부에 도움 되는지는 그 다음 문제입니다.",
                               "오랜만에 긴 시간 수면을 취했습니다. 당신은 일어났을 때 머리가 깨질듯한 고통을 받습니다. 지식이 섞인 느낌입니다.",
                               "집에서 휴식을 취하려고 합니다. 그런데 밖에 공사라도 하는지 시끄럽습니다. 휴식시간은 지났고, 당신은 분명히 쉬었지만, 어째 쉬지 않은 것 같습니다.",
                               "집에서 무언가 반짝이는 것을 발견합니다. 귀중한 아이템입니다. 휴식도 취하고 아이템도 얻고, 당신에게는 정말 최고의 날입니다.",
                               "집에서 TV를 봅니다. 사회 토론을 하고 있습니다. 잠깐 보다가 채널을 넘깁니다. 뉴스가 나옵니다. 다른 채널들도 마찬가지 입니다. 당신은 보고 싶지 않았지만, 그냥 보기로 합니다.",
                               "집에서 TV를 봅니다. 개그 프로그램을 하고 있습니다. 당신이 정말 보고 싶었던 것입니다. 오랜만에 웃으면서 TV를 봅니다.",
                               "친구들과 놀기로 결정합니다. 밖에서 돌아다니면서 시간을 보냅니다.",
                               "친구들과 놀기로 결정합니다. 안에서 놀기로 결정합니다. 당신의 집에서 서로 이야기하면서 시간을 보냅니다.",
                               "조금 뒤에 수업이 있어 학교에서 쉬기로 합니다. 휴게실에서 쉬기로 결정합니다.",
                               "조금 뒤에 수업이 있어 학교에서 쉬기로 합니다. 문득 과제가 떠오릅니다. 쉴 시간 따위는 없다는 것을 알게 된 당신은 부랴부랴 과제를 준비합니다."};

    std::string co_study[11] = {"당신은 열심히 공부했습니다.",
                                "휴일이지만 집중해서 공부했습니다.",
                                "게임을 하고 싶은 열망을 누르고 공부했습니다. 오늘은 왠지 공부가 잘 되는군요. 재밌게 공부했습니다.",
                                "도서관에서 공부를 합니다. 1시간 전까지만 해도 전공서적을 펴져 있던 당신의 책상은 만화책으로 가득 찼습니다. 이것도 공부라고 해야 할까요?",
                                "오늘따라 공부가 잘 됩니다. 예상했던 시간보다 목표를 빨리 달성한 당신은 다른 공부도 하기로 합니다.",
                                "공부를 하려고 마음 먹었지만, 당신의 몸은 그렇지 않습니다. 눈꺼풀이 무거워집니다. 괜찮습니다. 어차피 공부는 내일부터 하는 거니까요.",
                                "오늘은 튜터링이 있는 날입니다. 튜터링에 참여하여 당신의 지식을 넓힙니다.",
                                "당신은 공부합니다. 또 공부합니다. 계속 공부합니다. 어느 순간 정신을 차리니 이미 많은 것이 되어 있었습니다. 그러나 당신은 팔과 다리에 힘이 빠진 것을 느낍니다.",
                                "지식을 얻기 위해 공부를 합니다. 책 페이지는 계속 넘어가는데, 진전이 있어 보이지 않습니다. 결국 당신은 아무것도 배우지 못했습니다.",
                                "같은 실수는 두 번 하지 않습니다. 제대로 공부하기로 합니다. 그런데 이번에는 책 페이지가 넘어가지 않네요. 공부 방식을 바꿔도 진전이 없습니다.",
                                "책을 펴자마자 무언가 떨어집니다. 돈을 발견합니다. 의외의 돈이 생긴 당신은 다른 책에도 있을 것이라 생각하고 다른 책들도 뒤져보기 시작합니다. 결국 하라는 공부는 안 하고 돈만 찾게 됩니다."};

    std::string co_exercise[11] = {"당신은 열심히 운동했습니다.",
                                   "과제가 많습니다. 당신은 걱정을 잊기 위해 운동을 시도합니다.",
                                   "당신은 한계를 시험해보려 합니다. 원래 들었던 양보다 더 무겁게 운동을 합니다. 아니나 다를까, 당신은 부상을 입고 말았습니다. 크게 안 다친 것이 다행입니다.",
                                   "당신은 운동을 하다 문득 운동에 재능이 있다고 생각하게 됩니다. 공부를 때려치고 운동을 할 계획에 마음이 부풀어 오릅니다. 그런데 주위를 둘러보니 다들 당신보다 잘합니다. 다시 마음을 접습니다.",
                                   "당신은 운동 후 목이 말라 자판기에서 음료수를 사 마시려 합니다. 음료수를 고르고 잔돈을 받으려 하는데 100원 대신 500원 동전이 나옵니다. 한 개도 아니고 여러 개입니다. 당신은 부가 수익에 미소를 짓습니다.",
                                   "당신은 운동을 하기 위해 헬스장에 들어갑니다. 어느 한 곳에 유명한 헬스 트레이너가 와 있습니다. 당신은 계속 그를 지켜봅니다. 정말 잘한다는 생각만 한 채, 당신은 아무것도 하지 않고 나옵니다.",
                                   "당신은 운동을 하기 위해 헬스장에 들어갑니다. 어느 한 곳에 유명한 헬스 트레이너가 와 있습니다. 트레이너가 당신을 불러 특별히 개인 트레이닝을 시켜줍니다. 고생했지만, 도움이 되었을 것입니다.",
                                   "당신은 운동장에서 달리기를 합니다. 누군가 먼저 와서 뛰고 있습니다. 갑자기 경쟁심이 생긴 당신은 그 사람을 추월합니다. 그 사람도 경쟁에 응합니다. 서로 선의의 경쟁을 한 당신에게 승부는 중요하지 않습니다.",
                                   "수영장에서 수영을 합니다. 깊은 곳으로 들어갔다가 당신이 수영을 그다지 잘하지 않는다는 것을 알게 되지만, 이미 물 속에서 허우적대고 있는 후입니다. 누군가가 당신을 구했지만, 당분간은 수영은 물론이고 운동하기가 쉽지 않아보입니다.",
                                   "친구들과 볼링 내기를 합니다. 팀을 짜서 경기를 합니다. 당신의 팀이 승리했습니다. 힘들었지만, 음료수를 공짜를 먹게 되었습니다.",
                                   "친구들과 볼링 내기를 합니다. 팀을 짜서 경기를 합니다. 당신의 팀이 패배했습니다. 당신과 팀 일원들은 상대에게 음료수를 사 줘야 합니다."};

    // End of Semester
    std::string co_semester[2] = {"개강입니다!!\n\n그리고.. 종강입니다!!\n\n한 학기를 무사히(?) 마쳤습니다. 이번 학기의 성적표입니다.\n체력이 많이 까이면, F를 받습니다.",
                                  "다음 학기도 힘냅시다!"};
    std::string bt_semester[9] = {"다음","","","","","","","",""};

    // Game over and Game Clear
    std::string co_gameover[6] = {"\n★★★★　★★★★　★★　★★　★★★★　　　★★　　★　　★　★★★★　★★★★",
                                  "\n★　　　　★　　★　★　★　★　★　　　　　★　　★　★　　★　★　　　　★　　★",
                                  "\n★　★★　★★★★　★　　　★　★★★★　　★　　★　★　★　　★★★★　★★★　",
                                  "\n★　　★　★　　★　★　　　★　★　　　　　★　　★　★★　　　★　　　　★　　★",
                                  "\n★★★★　★　　★　★　　　★　★★★★　　　★★　　★　　　　★★★★　★　　★",
                                  "\n\n게임 오버! 왼쪽의 최종 스코어를 확인해 주세요.\n\n ▶ 새 게임 - Menu -> Game Start\n ▶ 게임 로드 - Menu -> Game Load"};
    std::string bt_gameover[9] = {"","","","","","","","",""};
    std::string co_gameclear[6] = {"\n★★★★　★★★★　★★　★★　★★★★　　★★★　★　　　★★★　★★　　★★",
                                  "\n★　　　　★　　★　★　★　★　★　　　　　★　　　★　　　★　　　★　★　★　★",
                                  "\n★　★★　★★★★　★　　　★　★★★★　　★　　　★　　　★★★　★★★　★★",
                                  "\n★　　★　★　　★　★　　　★　★　　　　　★　　　★　　　★　　　★　★　★　★",
                                  "\n★★★★　★　　★　★　　　★　★★★★　　★★★　★★★　★★★　★　★　★　★",
                                  "\n\n게임 클리어! 당신은 무사히 대학교를 졸업했습니다!\n앞으로 어떤 일들이 기다리고 있을까요?\n\n왼쪽의 최종 스코어를 확인해 주세요.\n\n 2017 SE271 객체지향 프로그래밍 팀 프로젝트\n 이승현, 배지훈, 장호민"};
    std::string bt_gameclear[9] = {"","","","","","","","",""};


    // Stat changing message
    std::string msg_add = "만큼 증가했습니다.";
    std::string msg_sub = "만큼 감소했습니다.";
    std::string msg_money = "돈이 ";
    std::string msg_life = "체력이 ";
    std::string msg_stats[6] = {"체력 스탯이 ",
                                "회복 스탯이 ",
                                "이학 스탯이 ",
                                "공학 스탯이 ",
                                "문학 스탯이 ",
                                "사회 스탯이 "};
    std::string msg_item = "아이템 ";
    std::string msg_gain = "을 얻었습니다 ";
    std::string msg_loss = "을 잃었습니다 ";
    std::string msg_subject[2] = {" 과목의 수업 부담은 이,공,문,사 각각 ",
                                  " 입니다."};

    std::string msg_workload[2] = {" 과목의 수업 부담이 일부 ",
                                   " 과목의 수업 부담이 전부 "};
    std::string msg_workload_inc = "배로 증가했습니다.";
    std::string msg_workload_dec = "배로 감소했습니다.";

    // Subject names
    std::string subjects[100] = {"Thesis","음악","체육","English for Leaders","Scientific Writing","디자인공학","감염과 면역","공학적 설계","응용수학방법론","선형대수학","다변수 미적분학","전자기학 실험","분자와 생명현상 실험","응용물리 실험","심화화학 실험","고급대수","위상수학","복합 공학 수학","확률과 통계","편미분 방정식","화학속의 물리학","고전역학","신경과학","고급 고체물리학","고급 양자역학","고체화학","자성체소재","열역학","고분자 개론","촉매화학","고급 생화학","전자기학","생물 의학","응용유체역학","세포신호전달과 생명 연속성","분자와 생명현상","유전자의 구조와 발현","열 및 통계 물리","전기역학","유기화학의 이해","선형시스템","운영체제","분산 및 병렬 컴퓨팅","무선 네트워크","컨벡스 최적화","다변수 미적분학","선형시스템 제어","마이크로/나노공학","모터시스템제어","인공지능","객체지향 프로그래밍","자동제어시스템","프로그래밍","메카트로닉스","전기전자 공학","열유체공학","데이터베이스개론","빅데이터 분석 및 시각화 개론","컴퓨터 알고리즘","수치해석","융복합 영상학 개론","과학과 예술","비교역사학","쓰기·읽기·말하기","동서양 철학의 통시적 이해","과학기술사의 주요장면","인문사회과학 특강","영화와 문학","과학기술과 저널리즘 실무","한국현대문학과 사상","문학과 대중문화","동양의 고전","서양근대문학의 이해","문학과 정신분석","말과 마음","인간 복제와 문학","문학과 사회","도스토예프스키와 톨스토이","언어의 세계","일본 애니메이션의 이해","이노베이션경영 개론","융합탐구세미나","글로벌리더십 (리더십 실습)","근대 사회와 사상","현대 사회와 윤리","법과 사회","글로벌 정치경제","경제학 입문","과학기술과 현대사회","조직관리","재무회계","기술평가 실무","지식재산권 실무","기업과 사회","현대경제의 이해","현대사회와 법","시장경제와 법","민주시민과 헌법","소비자와 시장","공공행정의 이해"};

    // Items
    int item_number = 36;
    int item_shop = 36;
    int item_value[36] = {0,5000,20000,80000,150000,5000,7000,3000,
                          3000,3000,3000,240000,200000,180000,220000,
                          200000,160000,270000,320000,120000,140000,150000,
                          500000,180000,180000,180000,180000,1000000,2400,
                          100000,1000000,3300,20000,2486,288000,154000};
    std::string items[36] = {"", "데자바", "블루블", "피자", "치맥", "라면","마사지 쿠폰","3색 펜",
                             "커피","원고지","기프티콘","NAND로이드","골드 카드","먹다남은음식","1패드",
                             "저금통","아령","컴퓨터","기가인터넷","전기장판","선배의 노트","단백질 쉐이크",
                             "최애의 포스터","계산기","키보드","프린터","콧수염","사과 박스","배지그렉의 핀",
                             "비트코인","공대생의 영혼","식권","플레잉 카드","보드카","네크로노미콘","딱총나무 지팡이"};
    // 00:Empty
    // 01:Dezaba           = (inst) Heal 200 HP
    // 02:Bluebull         = (inst) Heal 1000 HP
    // 03:Pizza            = (inst) Heal 50% HP
    // 04:ChiMak           = (inst) Heal 100% HP
    // 05:Ramen            = (inst) Increase HPST
    // 06:Massage Coupon   = (inst) Increase VITE
    // 07:3-color Pen      = (inst) Increase SCIN

    // 08:Coffee           = (inst) Increase CODE
    // 09:WonGoZi          = (inst) Increase LITE
    // 10:gifticon         = (inst) Increase SOCI
    // 11:Nandroid         = Decrease the penalty of stat decrease by 20%
    // 12:Gold Card        = Decrease the penalty of money loss by 20%
    // 13:leftovers        = Decrease the penalty of life loss by 20% (먹다남은음식)
    // 14:1pad             = Increase effect of stat increase by 20%

    // 15:PiggyBank        = Increase effect of money increase by 20%
    // 16:Arlung           = Increase effect of life increase by 20%
    // 17:Zeon Computer    = Decrease time pass of Sugang by 30%
    // 18:Gbps Internet    = Increase Sugang apply time by 50%
    // 19:ZunGiJangPan     = Increase rest effect by 30%
    // 20:Senpai's Note    = Increase study effect by 30%
    // 21:Protein Shake    = Increase exercise effect by 30%

    // 22:Picture of Chara = Decrease Workload of everything 10%
    // 23:Calculator       = Decrease Workload of SCIN by 10%
    // 24:Keyboard         = Decrease Workload of CODE by 10%
    // 25:Printer          = Decrease Workload of LITE by 10%
    // 26:Mustache         = Decrease Workload of SOCI by 10%
    // 27:Apple Box        = Change one F to D
    // 28:Bajigreg's Pin   = Feels good

    // 29:Bitcoin          = Value varies Every turn
    // 30:Soul of GDS      = Revive after death at 30% hp
    // 31:SikGuan          = Sell for money
    // 32:Playing Card     = -
    // 33:Vodka            = -
    // 34:Necronomicon     = increase hp 60 per turn
    // 35:Magic Wand       = increase hp 30 per turn
    std::string items_ex[36] = {"",
                                "체력을 200 회복합니다.",
                                "체력을 1000 회복합니다.",
                                "체력을 50% 회복합니다.",
                                "체력을 100% 회복합니다.",
                                "체력 스탯을 증가시킵니다.",
                                "회복 스탯을 증가시킵니다.",
                                "과학 스탯을 증가시킵니다.",
                                "공학 스탯을 증가시킵니다.",
                                "문학 스탯을 증가시킵니다.",
                                "사회 스탯을 증가시킵니다.",
                                "스탯 감소 효과를 20% 덜 받습니다.",
                                "돈 감소 효과를 20% 덜 받습니다.",
                                "체력 감소 효과를 20% 덜 받습니다.",
                                "스탯 증가 효과를 20% 더 받습니다.",
                                "돈 증가 효과를 20% 더 받습니다.",
                                "체력 증가 효과를 20% 더 받습니다.",
                                "수강신청시 시간이 30% 느리게 갑니다.",
                                "수강신청시 신청 가능한 시간이 50% 증가합니다.",
                                "기본 휴식 효과를 30% 더 받습니다.",
                                "기본 공부 효과를 30% 더 받습니다.",
                                "기본 운동 효과를 30% 더 받습니다.",
                                "모든 과목 스탯의 부담을 10% 감소시킵니다.",
                                "이학 스탯의 부담을 10% 감소시킵니다.",
                                "공학 스탯의 부담을 10% 감소시킵니다.",
                                "문학 스탯의 부담을 10% 감소시킵니다.",
                                "사회 스탯의 부담을 10% 감소시킵니다.",
                                "하나의 F 과목을 D 과목으로 바꿔 줍니다.",
                                "뭔가 멋진 핀입니다.",
                                "매 턴마다 값이 변동됩니다.",
                                "사망할 경우 30퍼센트의 체력으로 다시 부활합니다.",
                                "팔아서 돈으로 쓸 수 있습니다.",
                                "플레잉 카드입니다.",
                                "보드카입니다. 동아리방에 가고 싶어지는군요.",
                                "네크로노미콘입니다. +60hp/turn",
                                "어째서인지 이 세계에 흘러들어온 미지의 물건입니다. +30hp/turn"};

};

struct global_variables{
    // Turn : 10 Days, 4 times
    int turn;
    // global level - basic is 1
    double level;
    // Determine state of the game
    // -1, -2 ... game over
    // 0, start of the game
    int gamestate = 0;
    // Time limit for sugang apply
    int s_time = 180;
    int s_time_full = 180;
    // Number of subject
    int subject_num;
};

class gameManager{
private:
    // Global variables that indicates game flow - need to save
    global_variables gv;
    // Define enough number of subjects - need to save
    subject s[SUBJECT_BUFFER];
    // String data to print to console
    std::string console;
    // String data to print to buttons
    std::string button[BUTTON_LENGTH];
public:
    // Player variable holds data of player - need to save
    // Public OK since
    player pl;
    // text data
    data d;


    gameManager();
    ~gameManager();
    /*
    double rnd_d();
    int* rnd_ia(int lim,int coun);
    */
    // Each action to proceed
    void proceed(int input);
    // Update console and button text
    void print_update(std::string co, std::string* bt);

    // Generates subjects for each semester
    void generate_subjects();

    // print_update sugang data
    void print_sugang_data();
    void print_sugang_my_data();
    void print_sugang_apply(int index, char mode);
    std::string print_subject_data(int i, int mode);
    void sugang_time_decrease(double min, double max);

    // Outside actions
    void meet_friend();
    void visit_professor();
    void club_room();
    void wander_around();
    void work();
    void study();
    void exercise();
    // Computer actions
    void sugang();
    void sugang_apply(int index);
    void sugang_time_pass(double timepass);
    // Store
    void buy_item(int index);
    void print_store_buy(int index);
    void print_store_sell();
    void item_sell(int index);
    // Rest
    void rest();
    // Handle end of the each turn
    void game_turn_pass();
    // Handle end of the semester
    void calculate_semester();

    /// Actions
    std::string life_dec(int basic, double rnd_min, double rnd_max);
    std::string life_inc(int basic, double rnd_min, double rnd_max);
    std::string life_set(int value);
    std::string money_dec(int basic, double rnd_min, double rnd_max);
    std::string money_inc(int basic, double rnd_min, double rnd_max);
    std::string stats_dec(int basic, double rnd_min, double rnd_max,int index);
    std::string stats_inc(int basic, double rnd_min, double rnd_max,int index);
    std::string random_info(double rnd_min, double rnd_max);
    std::string workload_var(double rnd_min, double rnd_max,int index);
    std::string item_get_random(int min,int max);
    std::string item_loss();

    /// Misc

    player get_pl(){return this->pl;}
    void set_pl(player gl){ pl = gl;}
    global_variables get_gv(){return this->gv;}
    void set_gv(global_variables lg) { gv = lg;}
    subject get_subject(int index) {return this->s[index];}
    void set_subject(subject ls, int index) {s[index] = ls;}
    int get_turn(){return gv.turn;}
    int get_gamestate(){return gv.gamestate;}
    std::string get_console(){return this->console;}
    std::string get_button(int i){return this->button[i];}

};



#endif
